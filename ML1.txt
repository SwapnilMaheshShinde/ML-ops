#pract 1

import numpy as np
import pandas as pd
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, classification_report, confusion_matrix


iris = datasets.load_iris()


data = pd.DataFrame(iris.data, columns=iris.feature_names)
data.head()

X = iris.data
y = iris.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)


scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)


pd.DataFrame(X_train, columns=iris.feature_names).head()


model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)


accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy of Logistic Regression : {accuracy:.4f}")

confusion_matrix(y_test, y_pred)

print(classification_report(y_test, y_pred, target_names=iris.target_names))


print("Precision Score: ")
precision_score(y_test, y_pred, average='macro')  # or 'micro', 'weighted'


print("Recall Score:")
recall_score(y_test, y_pred, average='macro')

print("f1 score:")
f1_score(y_test, y_pred, average='macro')